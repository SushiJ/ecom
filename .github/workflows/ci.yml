name: CI Tests

on: [push, pull_request]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: mongo
          MONGO_INITDB_ROOT_PASSWORD: mongo
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      PAYPAL_CLIENT_ID: ""
      PAYPAL_CLIENT_SECRET: ""
      NODE_ENV: testing
      RUNNING_ENV: local
      MONGO_DATABASE_NAME: test_db
      MONGO_LOCAL_URI: mongodb://mongo:mongo@localhost:27017/
      MONGODB_URI: mongodb://mongo:27017/
      MONGO_USER: mongo
      MONGO_PASS: mongo
      PORT: 3000

    steps:
      - uses: actions/checkout@v4

      - name: setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.20.0
          cache: pnpm
          cache-dependency-path: sv/pnpm-lock.yaml

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        working-directory: sv
        run: pnpm install --frozen-lockfile

      - name: Install tsx globally
        run: pnpm add -g tsx

      - name: Run tests
        run: pnpm test

  # frontend-tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Use Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #
  #     - name: Install dependencies
  #       run: cd web && npm ci
  #
  #     - name: Run frontend tests
  #       run: cd web && npm test
